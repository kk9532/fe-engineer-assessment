{"ast":null,"code":"var _jsxFileName = \"/Users/kaushal/Desktop/fe-engineer-assessment/src/components/App/index.jsx\",\n    _s = $RefreshSig$();\n\nimport { Container, Row, Col } from 'react-bootstrap';\nimport moment from 'moment'; // you can access the sample dataset with:\n\nimport movieData from '../../movies.json';\nimport './App.scss';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MovieItem = (movie, openModal) => {\n  const {\n    id,\n    release_date,\n    poster_path,\n    title,\n    vote_average\n  } = movie;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie\",\n    onClick: () => openModal(movie),\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: `https://image.tmdb.org/t/p/original/${poster_path}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie__details\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie__title\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"details__bottom\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date\",\n          children: moment(release_date, \"YYYY-MM-DD\").format(\"LL\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rating\",\n          children: [\"\\u2B50\\uFE0F \", vote_average, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_c = MovieItem;\n\nconst Modal = (closeModal, selectedMovie) => {\n  const {\n    poster_path,\n    title,\n    overview\n  } = selectedMovie;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"close-btn\",\n      onClick: () => closeModal(),\n      children: \"x\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"details\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"details__left\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `https://image.tmdb.org/t/p/original/${selectedMovie.poster_path}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"details__right\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: selectedMovie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: selectedMovie.overview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Modal;\n\nfunction App() {\n  _s();\n\n  const [showModal, setShowModal] = useState(false);\n  const [selectedMovie, setSelectedMovie] = useState(null);\n\n  const openModal = movie => {\n    setSelectedMovie(movie);\n    setShowModal(true);\n  };\n\n  const closeModal = () => {\n    setShowModal(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie_contaner\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie_grid\",\n        children: movieData && movieData.map(movie => {\n          return MovieItem(movie, openModal);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal_container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info\",\n        children: selectedMovie && Modal()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"WL3BaYkusP3yfKBgFNfdG0x/bs0=\");\n\n_c3 = App;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"MovieItem\");\n$RefreshReg$(_c2, \"Modal\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["/Users/kaushal/Desktop/fe-engineer-assessment/src/components/App/index.jsx"],"names":["Container","Row","Col","moment","movieData","useState","MovieItem","movie","openModal","id","release_date","poster_path","title","vote_average","format","Modal","closeModal","selectedMovie","overview","App","showModal","setShowModal","setSelectedMovie","map"],"mappings":"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","sourcesContent":["import { Container, Row, Col } from 'react-bootstrap';\nimport moment from 'moment';\n\n// you can access the sample dataset with:\nimport movieData from '../../movies.json'\nimport './App.scss';\nimport { useState } from 'react';\n\nconst MovieItem = (movie, openModal) => {\n  const {\n    id,\n    release_date,\n    poster_path,\n    title,\n    vote_average,\n  } = movie\n  return (\n    <div key={id} className='movie' onClick={() => openModal(movie)}>\n      <img src={`https://image.tmdb.org/t/p/original/${poster_path}`} />\n      <div className='movie__details'>\n        <div className='movie__title'>{title}</div>\n        <div className=\"details__bottom\">\n          <div className='date'>{moment(release_date, \"YYYY-MM-DD\").format(\"LL\")}</div>\n          <div className='rating'>⭐️ {vote_average} </div>\n        </div>\n      </div>\n    </div>)\n}\n\nconst Modal = (closeModal, selectedMovie) => {\n  const { poster_path, title, overview } = selectedMovie\n  return (\n    <div>\n      <div className='close-btn' onClick={() => closeModal()}>x</div>\n\n      <div className='details'>\n        <div className='details__left'><img src={`https://image.tmdb.org/t/p/original/${selectedMovie.poster_path}`} /></div>\n        <div className='details__right'>\n          <h1>{selectedMovie.title}</h1>\n          <p>{selectedMovie.overview}</p>\n        </div>\n      </div>\n\n\n    </div>\n  )\n}\n\n\n\nfunction App() {\n  const [showModal, setShowModal] = useState(false)\n  const [selectedMovie, setSelectedMovie] = useState(null)\n\n  const openModal = (movie) => {\n    setSelectedMovie(movie)\n    setShowModal(true)\n\n  }\n\n  const closeModal = () => {\n    setShowModal(false)\n  }\n\n  return (\n    <div className=\"App\">\n      {/* <Container> */}\n\n      <div className='movie_contaner'>\n        <div className='movie_grid'>\n          {\n            movieData && movieData.map((movie) => {\n\n              return (\n                MovieItem(movie, openModal)\n\n              )\n            })\n          }\n        </div>\n\n      </div>\n      {\n        showModal && <div className='modal_container'>\n          <div className='info'>\n            {\n              selectedMovie && Modal()\n\n            }\n          </div>\n        </div>\n      }\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}